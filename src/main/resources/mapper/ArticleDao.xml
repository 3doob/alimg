<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alimg.blog.dao.ArticleDao">
    <!-- 目的：为dao接口方法提供sql语句配置 -->
    <resultMap id="ArticleMapper" type="com.alimg.blog.entity.Article">
        <id property="id" column="articleId"/>
        <result property="authorId" column="authorId"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="createTime" column="createTime"/>
        <result property="modifyTime" column="modifyTime"/>
        <result property="publishTime" column="publishTime"/>
        <result property="level" column="level"/>
        <result property="click" column="click"/>
        <result property="sort" column="sort"/>
        <collection property="item" javaType="java.util.List" ofType="com.alimg.blog.entity.Item">
            <id property="id" column="itemId"/>
            <result property="name" column="itemName"/>
            <result property="mark" column="itemMark"/>
            <result property="createTime" column="itemCreateTime"/>
        </collection>
        <collection property="tag" javaType="java.util.List" ofType="com.alimg.blog.entity.Tag">
            <id property="id" column="tagId"/>
            <result property="name" column="tagName"/>
            <result property="mark" column="tagMark"/>
            <result property="info" column="tagInfo"/>
            <result property="article_id" column="tagArticleId"/>
        </collection>

        <collection property="user" ofType="com.alimg.blog.entity.User">
            <id property="id" column="userId"/>
            <result property="name" column="userName"/>
            <result property="info" column="userInfo"/>
            <result property="img" column="userImg"/>
            <result property="mark" column="userMark"/>
        </collection>

    </resultMap>

    <insert id="insertArticle">
        INSERT ignore INTO Article(title, content,createTime,level,authorId)
        VALUES (#{article.title}, #{article.content},#{article.createTime},#{article.level},#{article.authorId})
        <selectKey resultType="Integer" keyProperty="article.id" order="AFTER">
            SELECT @@IDENTITY
        </selectKey>
    </insert>

    <update id="modifyArticle">
        UPDATE article SET title = #{article.title},content = #{article.content},createTime=#{article.createTime},level = #{article.level},authorId = #{article.authorId}
        WHERE
        id = #{article.id}
    </update>

    <delete id="deleteArticle">
        DELETE FROM article WHERE id = #{id}
    </delete>

    <select id="selectArticle" resultMap="ArticleMapper">
        SELECT
        a.id articleId,
        a.authorId,
        a.title,
        a.content,
        a.createTime,
        a.modifyTime,
        a.publishTime,
        a.level,
        a.click,
        a.sort,
        b.id itemId,
        b.name itemName,
        b.mark itemMark,
        b.createTime itemCreateTime,
        d.id tagId,
        d.name tagName,
        d.mark tagMark,
        d.info tagInfo,
        d.article_id tagArticleId,
        e.id userId,
        e.name userName,
        e.info userInfo,
        e.img userImg,
        e.mark userMark
        FROM
        article a
        LEFT JOIN article_has_item c  ON a.id = c.article_id
        LEFT JOIN item b  ON b.id = c.item_id
        LEFT JOIN tag d  ON a.id = d.article_id
        LEFT JOIN user e  ON a.authorId = e.id
        WHERE
        a.id = ${id}
    </select>
    <select id="selectArticleCount" resultType="java.lang.Integer">
        <if test="item == 0">
            SELECT COUNT(id) FROM article
            <if test="search != '' ">
                WHERE article.title LIKE '%' #{search} '%'
            </if>
        </if>
        <if test="item != 0">
            SELECT  count(m.article_id) FROM (SELECT article_id FROM article_has_item WHERE item_id = #{item}
            <if test="search != '' ">
                AND article.title LIKE '%' #{search} '%'
            </if>
            ) AS m
        </if>
    </select>
    <select id="queryTop" resultMap="ArticleMapper">
        SELECT
        a.id articleId,
        a.authorId,
        a.title,
        a.content,
        a.createTime,
        a.modifyTime,
        a.publishTime,
        a.level,
        a.click,
        a.sort,
        b.id itemId,
        b.name itemName,
        b.mark itemMark,
        b.createTime itemCreateTime,
        d.id tagId,
        d.name tagName,
        d.mark tagMark,
        d.info tagInfo,
        d.article_id tagArticleId,
        e.id userId,
        e.name userName,
        e.info userInfo,
        e.img userImg,
        e.mark userMark
        FROM
        article a
        LEFT JOIN article_has_item c  ON a.id = c.article_id
        LEFT JOIN item b  ON b.id = c.item_id
        LEFT JOIN tag d  ON a.id = d.article_id
        LEFT JOIN user e  ON a.authorId = e.id
        WHERE
        a.id in (SELECT t.id FROM (SELECT temp.id FROM article temp
        WHERE 1=1
        <if test="item != 0">
            AND temp.id in(SELECT  m.article_id FROM (SELECT article_id FROM article_has_item WHERE item_id = #{item}) AS m)
        </if>
        AND temp.level = 1 ) AS t)
        ORDER BY
        a.createTime DESC
    </select>
    <select id="queryAll" resultMap="ArticleMapper">
      SELECT
        a.id articleId,
        a.authorId,
        a.title,
        a.content,
        a.createTime,
        a.modifyTime,
        a.publishTime,
        a.level,
        a.click,
        a.sort,
        b.id itemId,
        b.name itemName,
        b.mark itemMark,
        b.createTime itemCreateTime,
        d.id tagId,
        d.name tagName,
        d.mark tagMark,
        d.info tagInfo,
        d.article_id tagArticleId,
        e.id userId,
        e.name userName,
        e.info userInfo,
        e.img userImg,
        e.mark userMark
        FROM
        article a
        LEFT JOIN article_has_item c  ON a.id = c.article_id
        LEFT JOIN item b  ON b.id = c.item_id
        LEFT JOIN tag d  ON a.id = d.article_id
        LEFT JOIN user e  ON a.authorId = e.id
        WHERE
        a.id in (SELECT t.id FROM (SELECT temp.id FROM article temp
        WHERE 1=1
        <if test="item != 0">
          AND temp.id in(SELECT  m.article_id FROM (SELECT article_id FROM article_has_item WHERE item_id = #{item}) AS m)
        </if>
        <if test="search != '' ">
          AND temp.title LIKE '%' #{search} '%'
        </if>
        ORDER BY temp.createTime DESC
        LIMIT ${offset}, ${limit}) AS t)
        ORDER BY
        a.createTime DESC
    </select>

</mapper>